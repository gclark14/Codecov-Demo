buildscript {
	ext {
		springBootVersion = '1.5.4.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'jacoco'

version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
}

dependencies {
	compile('org.springframework.boot:spring-boot-starter')
	testCompile('org.springframework.boot:spring-boot-starter-test')
}

sourceSets {
	main {
		java.srcDir "src/main/java"
		resources.srcDir "src/main/resources"
	}
	test {
		java.srcDir "src/test/java"
		//resources.srcDir "src/test/resources"
	}
	testIntegration {
		java.srcDir "src/test-integration/java"
		//resources.srcDir "src/test-integration/resources"

		compileClasspath += main.output + test.output
		runtimeClasspath += main.output + test.output
	}
}

configurations {
	testIntegrationCompile.extendsFrom testCompile
	testIntegrationRuntime.extendsFrom testRuntime
}

task testIntegration(type: Test) {
	testClassesDir = sourceSets.testIntegration.output.classesDir
	classpath = sourceSets.testIntegration.runtimeClasspath
	outputs.upToDateWhen { false }
}

// if building the project, run integration tests if and only if all unit tests pass first
testIntegration.mustRunAfter test

jacocoTestReport {
	reports {
		xml.enabled true
		html.enabled false
	}
}
